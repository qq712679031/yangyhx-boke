import{_ as r,M as t,p,q as s,R as e,t as o,N as h,a1 as d}from"./framework-5866ffd3.js";const l={},i=d('<h3 id="fs-shell" tabindex="-1"><a class="header-anchor" href="#fs-shell" aria-hidden="true">#</a> FS Shell</h3><p>调用文件系统(FS)Shell命令应使用 bin/hadoop fs <code>&lt;args&gt;</code>的形式。 所有的的FS shell命令使用URI路径作为参数。URI格式是<em>scheme://authority/path</em>。对HDFS文件系统，scheme是<em>hdfs</em>，对本地文件系统，scheme是<em>file</em>。其中scheme和authority参数都是可选的，如果未加指定，就会使用配置中指定的默认scheme。一个HDFS文件或目录比如*/parent/child<em>可以表示成</em>hdfs://namenode:namenodeport/parent/child*，或者更简单的*/parent/child*（假设你配置文件中的默认值是<em>namenode:namenodeport</em>）。大多数FS Shell命令的行为和对应的Unix Shell命令类似，不同之处会在下面介绍各命令使用详情时指出。出错信息会输出到<em>stderr</em>，其他信息输出到<em>stdout</em>。</p><h3 id="cat" tabindex="-1"><a class="header-anchor" href="#cat" aria-hidden="true">#</a> cat</h3><p>使用方法：hadoop fs -cat URI [URI …]</p><p>将路径指定文件的内容输出到<em>stdout</em>。</p><p>示例：</p><ul><li>hadoop fs -cat hdfs://host1:port1/file1 hdfs://host2:port2/file2</li><li>hadoop fs -cat file:///file3 /user/hadoop/file4</li></ul><p>返回值： 成功返回0，失败返回-1。</p><h3 id="chgrp" tabindex="-1"><a class="header-anchor" href="#chgrp" aria-hidden="true">#</a> chgrp</h3>',9),c={href:"https://hadoop.apache.org/docs/r1.0.4/cn/hdfs_permissions_guide.html",target:"_blank",rel:"noopener noreferrer"},n={href:"https://hadoop.apache.org/docs/r1.0.4/cn/hdfs_permissions_guide.html",target:"_blank",rel:"noopener noreferrer"},f=e("h3",{id:"chmod",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#chmod","aria-hidden":"true"},"#"),o(" chmod")],-1),u=e("p",null,"使用方法：hadoop fs -chmod [-R] <MODE[,MODE]... | OCTALMODE> URI [URI …]",-1),m={href:"https://hadoop.apache.org/docs/r1.0.4/cn/hdfs_permissions_guide.html",target:"_blank",rel:"noopener noreferrer"},g=e("h3",{id:"chown",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#chown","aria-hidden":"true"},"#"),o(" chown")],-1),_=e("p",null,"使用方法：hadoop fs -chown [-R] [OWNER][:[GROUP]] URI [URI ]",-1),x={href:"https://hadoop.apache.org/docs/r1.0.4/cn/hdfs_permissions_guide.html",target:"_blank",rel:"noopener noreferrer"},R=e("h3",{id:"copyfromlocal",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#copyfromlocal","aria-hidden":"true"},"#"),o(" copyFromLocal")],-1),b=e("p",null,[o("使用方法：hadoop fs -copyFromLocal "),e("code",null,"<localsrc>"),o(" URI")],-1),U={href:"https://hadoop.apache.org/docs/r1.0.4/cn/hdfs_shell.html#putlink",target:"_blank",rel:"noopener noreferrer"},I=e("strong",null,"put",-1),k=e("h3",{id:"copytolocal",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#copytolocal","aria-hidden":"true"},"#"),o(" copyToLocal")],-1),S=e("p",null,[o("使用方法：hadoop fs -copyToLocal [-ignorecrc] [-crc] URI "),e("code",null,"<localdst>")],-1),v={href:"https://hadoop.apache.org/docs/r1.0.4/cn/hdfs_shell.html#getlink",target:"_blank",rel:"noopener noreferrer"},y=e("strong",null,"get",-1),D=d('<h3 id="cp" tabindex="-1"><a class="header-anchor" href="#cp" aria-hidden="true">#</a> cp</h3><p>使用方法：hadoop fs -cp URI [URI …] <code>&lt;dest&gt;</code></p><p>将文件从源路径复制到目标路径。这个命令允许有多个源路径，此时目标路径必须是一个目录。 示例：</p><ul><li>hadoop fs -cp /user/hadoop/file1 /user/hadoop/file2</li><li>hadoop fs -cp /user/hadoop/file1 /user/hadoop/file2 /user/hadoop/dir</li></ul><p>返回值：</p><p>成功返回0，失败返回-1。</p><h3 id="du" tabindex="-1"><a class="header-anchor" href="#du" aria-hidden="true">#</a> du</h3><p>使用方法：hadoop fs -du URI [URI …]</p><p>显示目录中所有文件的大小，或者当只指定一个文件时，显示此文件的大小。 示例： hadoop fs -du /user/hadoop/dir1 /user/hadoop/file1 hdfs://host:port/user/hadoop/dir1 返回值： 成功返回0，失败返回-1。</p><h3 id="dus" tabindex="-1"><a class="header-anchor" href="#dus" aria-hidden="true">#</a> dus</h3><p>使用方法：hadoop fs -dus <code>&lt;args&gt;</code></p><p>显示文件的大小。</p><h3 id="expunge" tabindex="-1"><a class="header-anchor" href="#expunge" aria-hidden="true">#</a> expunge</h3><p>使用方法：hadoop fs -expunge</p>',14),F={href:"https://hadoop.apache.org/docs/r1.0.4/cn/hdfs_design.html",target:"_blank",rel:"noopener noreferrer"},L=d('<h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get</h3><p>使用方法：hadoop fs -get [-ignorecrc] [-crc] <code>&lt;src&gt; &lt;localdst&gt;</code></p><p>复制文件到本地文件系统。可用-ignorecrc选项复制CRC校验失败的文件。使用-crc选项复制文件以及CRC信息。</p><p>示例：</p><ul><li>hadoop fs -get /user/hadoop/file localfile</li><li>hadoop fs -get hdfs://host:port/user/hadoop/file localfile</li></ul><p>返回值：</p><p>成功返回0，失败返回-1。</p><h3 id="getmerge" tabindex="-1"><a class="header-anchor" href="#getmerge" aria-hidden="true">#</a> getmerge</h3><p>使用方法：hadoop fs -getmerge <code>&lt;src&gt; &lt;localdst&gt;</code> [addnl]</p><p>接受一个源目录和一个目标文件作为输入，并且将源目录中所有的文件连接成本地目标文件。addnl是可选的，用于指定在每个文件结尾添加一个换行符。</p><h3 id="ls" tabindex="-1"><a class="header-anchor" href="#ls" aria-hidden="true">#</a> ls</h3><p>使用方法：hadoop fs -ls <code>&lt;args&gt;</code></p><p>如果是文件，则按照如下格式返回文件信息： 文件名 &lt;副本数&gt; 文件大小 修改日期 修改时间 权限 用户ID 组ID 如果是目录，则返回它直接子文件的一个列表，就像在Unix中一样。目录返回列表的信息如下： 目录名 <code>&lt;dir&gt;</code> 修改日期 修改时间 权限 用户ID 组ID 示例： hadoop fs -ls /user/hadoop/file1 /user/hadoop/file2 hdfs://host:port/user/hadoop/dir1 /nonexistentfile 返回值： 成功返回0，失败返回-1。</p><h3 id="lsr" tabindex="-1"><a class="header-anchor" href="#lsr" aria-hidden="true">#</a> lsr</h3><p>使用方法：hadoop fs -lsr <code>&lt;args&gt;</code> ls命令的递归版本。类似于Unix中的ls -R。</p><h3 id="mkdir" tabindex="-1"><a class="header-anchor" href="#mkdir" aria-hidden="true">#</a> mkdir</h3><p>使用方法：hadoop fs -mkdir <code>&lt;paths&gt;</code></p><p>接受路径指定的uri作为参数，创建这些目录。其行为类似于Unix的mkdir -p，它会创建路径中的各级父目录。</p><p>示例：</p><ul><li>hadoop fs -mkdir /user/hadoop/dir1 /user/hadoop/dir2</li><li>hadoop fs -mkdir hdfs://host1:port1/user/hadoop/dir hdfs://host2:port2/user/hadoop/dir</li></ul><p>返回值：</p><p>成功返回0，失败返回-1。</p><h3 id="movefromlocal" tabindex="-1"><a class="header-anchor" href="#movefromlocal" aria-hidden="true">#</a> movefromLocal</h3><p>使用方法：dfs -moveFromLocal <code>&lt;src&gt; &lt;dst&gt;</code></p><p>输出一个”not implemented“信息。</p><h3 id="mv" tabindex="-1"><a class="header-anchor" href="#mv" aria-hidden="true">#</a> mv</h3><p>使用方法：hadoop fs -mv URI [URI …] <code>&lt;dest&gt;</code></p><p>将文件从源路径移动到目标路径。这个命令允许有多个源路径，此时目标路径必须是一个目录。不允许在不同的文件系统间移动文件。 示例：</p><ul><li>hadoop fs -mv /user/hadoop/file1 /user/hadoop/file2</li><li>hadoop fs -mv hdfs://host:port/file1 hdfs://host:port/file2 hdfs://host:port/file3 hdfs://host:port/dir1</li></ul><p>返回值：</p><p>成功返回0，失败返回-1。</p><h3 id="put" tabindex="-1"><a class="header-anchor" href="#put" aria-hidden="true">#</a> put</h3><p>使用方法：hadoop fs -put <code>&lt;localsrc&gt; ... &lt;dst&gt;</code></p><p>从本地文件系统中复制单个或多个源路径到目标文件系统。也支持从标准输入中读取输入写入目标文件系统。</p><ul><li>hadoop fs -put localfile /user/hadoop/hadoopfile</li><li>hadoop fs -put localfile1 localfile2 /user/hadoop/hadoopdir</li><li>hadoop fs -put localfile hdfs://host:port/hadoop/hadoopfile</li><li>hadoop fs -put - hdfs://host:port/hadoop/hadoopfile 从标准输入中读取输入。</li></ul><p>返回值：</p><p>成功返回0，失败返回-1。</p><h3 id="rm" tabindex="-1"><a class="header-anchor" href="#rm" aria-hidden="true">#</a> rm</h3><p>使用方法：hadoop fs -rm URI [URI …]</p><p>删除指定的文件。只删除非空目录和文件。请参考rmr命令了解递归删除。 示例：</p><ul><li>hadoop fs -rm hdfs://host:port/file /user/hadoop/emptydir</li></ul><p>返回值：</p><p>成功返回0，失败返回-1。</p><h3 id="rmr" tabindex="-1"><a class="header-anchor" href="#rmr" aria-hidden="true">#</a> rmr</h3><p>使用方法：hadoop fs -rmr URI [URI …]</p><p>delete的递归版本。 示例：</p><ul><li>hadoop fs -rmr /user/hadoop/dir</li><li>hadoop fs -rmr hdfs://host:port/user/hadoop/dir</li></ul><p>返回值：</p><p>成功返回0，失败返回-1。</p><h3 id="setrep" tabindex="-1"><a class="header-anchor" href="#setrep" aria-hidden="true">#</a> setrep</h3><p>使用方法：hadoop fs -setrep [-R] <code>&lt;path&gt;</code></p><p>改变一个文件的副本系数。-R选项用于递归改变目录下所有文件的副本系数。</p><p>示例：</p><ul><li>hadoop fs -setrep -w 3 -R /user/hadoop/dir1</li></ul><p>返回值：</p><p>成功返回0，失败返回-1。</p><h3 id="stat" tabindex="-1"><a class="header-anchor" href="#stat" aria-hidden="true">#</a> stat</h3><p>使用方法：hadoop fs -stat URI [URI …]</p><p>返回指定路径的统计信息。</p><p>示例：</p><ul><li>hadoop fs -stat path</li></ul><p>返回值： 成功返回0，失败返回-1。</p><h3 id="tail" tabindex="-1"><a class="header-anchor" href="#tail" aria-hidden="true">#</a> tail</h3><p>使用方法：hadoop fs -tail [-f] URI</p><p>将文件尾部1K字节的内容输出到stdout。支持-f选项，行为和Unix中一致。</p><p>示例：</p><ul><li>hadoop fs -tail pathname</li></ul><p>返回值： 成功返回0，失败返回-1。</p><h3 id="test" tabindex="-1"><a class="header-anchor" href="#test" aria-hidden="true">#</a> test</h3><p>使用方法：hadoop fs -test -[ezd] URI</p><p>选项： -e 检查文件是否存在。如果存在则返回0。 -z 检查文件是否是0字节。如果是则返回0。 -d 如果路径是个目录，则返回1，否则返回0。</p><p>示例：</p><ul><li>hadoop fs -test -e filename</li></ul><h3 id="text" tabindex="-1"><a class="header-anchor" href="#text" aria-hidden="true">#</a> text</h3><p>使用方法：hadoop fs -text <code>&lt;src&gt;</code></p><p>将源文件输出为文本格式。允许的格式是zip和TextRecordInputStream。</p><h3 id="touchz" tabindex="-1"><a class="header-anchor" href="#touchz" aria-hidden="true">#</a> touchz</h3><p>使用方法：hadoop fs -touchz URI [URI …]</p><p>创建一个0字节的空文件。</p><p>示例：</p><ul><li>hadoop -touchz pathname</li></ul><p>返回值： 成功返回0，失败返回-1。</p>',82);function z(C,E){const a=t("ExternalLinkIcon");return p(),s("div",null,[i,e("p",null,[o("使用方法：hadoop fs -chgrp [-R] GROUP URI [URI …] Change group association of files. With -R, make the change recursively through the directory structure. The user must be the owner of files, or else a super-user. Additional information is in the "),e("a",c,[o("Permissions User Guide"),h(a)]),o(". -->")]),e("p",null,[o("改变文件所属的组。使用-R将使改变在目录结构下递归进行。命令的使用者必须是文件的所有者或者超级用户。更多的信息请参见"),e("a",n,[o("HDFS权限用户指南"),h(a)]),o("。")]),f,u,e("p",null,[o("改变文件的权限。使用-R将使改变在目录结构下递归进行。命令的使用者必须是文件的所有者或者超级用户。更多的信息请参见"),e("a",m,[o("HDFS权限用户指南"),h(a)]),o("。")]),g,_,e("p",null,[o("改变文件的拥有者。使用-R将使改变在目录结构下递归进行。命令的使用者必须是超级用户。更多的信息请参见"),e("a",x,[o("HDFS权限用户指南"),h(a)]),o("。")]),R,b,e("p",null,[o("除了限定源路径是一个本地文件外，和"),e("a",U,[I,h(a)]),o("命令相似。")]),k,S,e("p",null,[o("除了限定目标路径是一个本地文件外，和"),e("a",v,[y,h(a)]),o("命令类似。")]),D,e("p",null,[o("清空回收站。请参考"),e("a",F,[o("HDFS设计"),h(a)]),o("文档以获取更多关于回收站特性的信息。")]),L])}const w=r(l,[["render",z],["__file","hdfsShell.html.vue"]]);export{w as default};
