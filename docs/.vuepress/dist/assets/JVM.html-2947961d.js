const l=JSON.parse('{"key":"v-752da607","path":"/language/java/JVM.html","title":"JVM","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"JVM","description":"JVM"},"headers":[{"level":2,"title":"1、JVM是什么","slug":"_1、jvm是什么","link":"#_1、jvm是什么","children":[]},{"level":2,"title":"2、Java对象编译过程","slug":"_2、java对象编译过程","link":"#_2、java对象编译过程","children":[]},{"level":2,"title":"3、JVM类加载机制","slug":"_3、jvm类加载机制","link":"#_3、jvm类加载机制","children":[{"level":3,"title":"3.1 什么是类加载","slug":"_3-1-什么是类加载","link":"#_3-1-什么是类加载","children":[]},{"level":3,"title":"3.2 类加载器","slug":"_3-2-类加载器","link":"#_3-2-类加载器","children":[]},{"level":3,"title":"3.3 类加载器加载顺序","slug":"_3-3-类加载器加载顺序","link":"#_3-3-类加载器加载顺序","children":[]}]},{"level":2,"title":"4、JVM运行时内存数据区","slug":"_4、jvm运行时内存数据区","link":"#_4、jvm运行时内存数据区","children":[{"level":3,"title":"4.1 概念解读","slug":"_4-1-概念解读","link":"#_4-1-概念解读","children":[]},{"level":3,"title":"4.2 JVM线程安全","slug":"_4-2-jvm线程安全","link":"#_4-2-jvm线程安全","children":[]}]},{"level":2,"title":"4.3 JVM内存溢出","slug":"_4-3-jvm内存溢出","link":"#_4-3-jvm内存溢出","children":[{"level":3,"title":"4.3.1 Java堆溢出","slug":"_4-3-1-java堆溢出","link":"#_4-3-1-java堆溢出","children":[]},{"level":3,"title":"4.3.2 虚拟机栈和本地方法栈溢出","slug":"_4-3-2-虚拟机栈和本地方法栈溢出","link":"#_4-3-2-虚拟机栈和本地方法栈溢出","children":[]},{"level":3,"title":"4.3.3 方法区和运行时常量池溢出","slug":"_4-3-3-方法区和运行时常量池溢出","link":"#_4-3-3-方法区和运行时常量池溢出","children":[]},{"level":3,"title":"4.3.4 直接内存溢出","slug":"_4-3-4-直接内存溢出","link":"#_4-3-4-直接内存溢出","children":[]}]},{"level":2,"title":"5、 JVM垃圾回收算法","slug":"_5、-jvm垃圾回收算法","link":"#_5、-jvm垃圾回收算法","children":[]},{"level":2,"title":"5.1 垃圾回收算法理论","slug":"_5-1-垃圾回收算法理论","link":"#_5-1-垃圾回收算法理论","children":[{"level":3,"title":"5.1.1 复制算法","slug":"_5-1-1-复制算法","link":"#_5-1-1-复制算法","children":[]},{"level":3,"title":"5.1.2 标记-清除算法","slug":"_5-1-2-标记-清除算法","link":"#_5-1-2-标记-清除算法","children":[]},{"level":3,"title":"5.1.3 标记-整理算法","slug":"_5-1-3-标记-整理算法","link":"#_5-1-3-标记-整理算法","children":[]},{"level":3,"title":"5.1.4 JDK1.7 - 垃圾回收","slug":"_5-1-4-jdk1-7-垃圾回收","link":"#_5-1-4-jdk1-7-垃圾回收","children":[]},{"level":3,"title":"5.2.5 JDK1.8 +垃圾回收","slug":"_5-2-5-jdk1-8-垃圾回收","link":"#_5-2-5-jdk1-8-垃圾回收","children":[]}]},{"level":2,"title":"6、JVM垃圾回收器","slug":"_6、jvm垃圾回收器","link":"#_6、jvm垃圾回收器","children":[]},{"level":2,"title":"6.1 Serial收集器","slug":"_6-1-serial收集器","link":"#_6-1-serial收集器","children":[]},{"level":2,"title":"6.2 ParNew 收集器","slug":"_6-2-parnew-收集器","link":"#_6-2-parnew-收集器","children":[]},{"level":2,"title":"6.3 Parallel Scavenge收集器","slug":"_6-3-parallel-scavenge收集器","link":"#_6-3-parallel-scavenge收集器","children":[]},{"level":2,"title":"6.4 Serial  Old收集器","slug":"_6-4-serial-old收集器","link":"#_6-4-serial-old收集器","children":[]},{"level":2,"title":"6.5 Parallel Old收集器","slug":"_6-5-parallel-old收集器","link":"#_6-5-parallel-old收集器","children":[]},{"level":2,"title":"6.6 CMS 收集器","slug":"_6-6-cms-收集器","link":"#_6-6-cms-收集器","children":[]},{"level":2,"title":"6.7 G1收集器","slug":"_6-7-g1收集器","link":"#_6-7-g1收集器","children":[{"level":3,"title":"6.7.1 内存划分","slug":"_6-7-1-内存划分","link":"#_6-7-1-内存划分","children":[]},{"level":3,"title":"6.7.2  GC模式","slug":"_6-7-2-gc模式","link":"#_6-7-2-gc模式","children":[]},{"level":3,"title":"6.7.3 Full GC","slug":"_6-7-3-full-gc","link":"#_6-7-3-full-gc","children":[]},{"level":3,"title":"6.7.4 部分参数","slug":"_6-7-4-部分参数","link":"#_6-7-4-部分参数","children":[]},{"level":3,"title":"6.7.5 持久代不见了","slug":"_6-7-5-持久代不见了","link":"#_6-7-5-持久代不见了","children":[]}]},{"level":2,"title":"7、JVM常见参数","slug":"_7、jvm常见参数","link":"#_7、jvm常见参数","children":[]},{"level":2,"title":"7.1 参数列表","slug":"_7-1-参数列表","link":"#_7-1-参数列表","children":[]},{"level":2,"title":"7.2 CMS用法","slug":"_7-2-cms用法","link":"#_7-2-cms用法","children":[]},{"level":2,"title":"7.3 JVM调优工具","slug":"_7-3-jvm调优工具","link":"#_7-3-jvm调优工具","children":[{"level":3,"title":"7.3.1 jstat 命令","slug":"_7-3-1-jstat-命令","link":"#_7-3-1-jstat-命令","children":[]},{"level":3,"title":"7.3.2 jmap的使用以及内存溢出分析","slug":"_7-3-2-jmap的使用以及内存溢出分析","link":"#_7-3-2-jmap的使用以及内存溢出分析","children":[]},{"level":3,"title":"7.3.3 jstack的使用","slug":"_7-3-3-jstack的使用","link":"#_7-3-3-jstack的使用","children":[]},{"level":3,"title":"7.3.4 VisualVM工具的使用","slug":"_7-3-4-visualvm工具的使用","link":"#_7-3-4-visualvm工具的使用","children":[]}]},{"level":2,"title":"8、多线程","slug":"_8、多线程","link":"#_8、多线程","children":[]},{"level":2,"title":"8.1 线程安全","slug":"_8-1-线程安全","link":"#_8-1-线程安全","children":[]},{"level":2,"title":"8.2 对象锁的两种方式","slug":"_8-2-对象锁的两种方式","link":"#_8-2-对象锁的两种方式","children":[]},{"level":2,"title":"8.3 类锁的两种方式","slug":"_8-3-类锁的两种方式","link":"#_8-3-类锁的两种方式","children":[]},{"level":2,"title":"8.4 其他对象锁","slug":"_8-4-其他对象锁","link":"#_8-4-其他对象锁","children":[]},{"level":2,"title":"8.5 脏读","slug":"_8-5-脏读","link":"#_8-5-脏读","children":[]},{"level":2,"title":"8.6 Lock锁（了解）","slug":"_8-6-lock锁-了解","link":"#_8-6-lock锁-了解","children":[{"level":3,"title":"8.6.1 lock和synchronized的区别","slug":"_8-6-1-lock和synchronized的区别","link":"#_8-6-1-lock和synchronized的区别","children":[]},{"level":3,"title":"8.6.2 Lock接口中方法的使用","slug":"_8-6-2-lock接口中方法的使用","link":"#_8-6-2-lock接口中方法的使用","children":[]},{"level":3,"title":"8.6.3 ReentrantLock","slug":"_8-6-3-reentrantlock","link":"#_8-6-3-reentrantlock","children":[]},{"level":3,"title":"8.6.3 Lock线程间通信","slug":"_8-6-3-lock线程间通信","link":"#_8-6-3-lock线程间通信","children":[]}]},{"level":2,"title":"8.7 伪共享","slug":"_8-7-伪共享","link":"#_8-7-伪共享","children":[{"level":3,"title":"8.7.1 CPU缓存","slug":"_8-7-1-cpu缓存","link":"#_8-7-1-cpu缓存","children":[]},{"level":3,"title":"8.7.2 各缓存及内存的访问速度","slug":"_8-7-2-各缓存及内存的访问速度","link":"#_8-7-2-各缓存及内存的访问速度","children":[]},{"level":3,"title":"8.7.3 缓存行","slug":"_8-7-3-缓存行","link":"#_8-7-3-缓存行","children":[]},{"level":3,"title":"8.7.4 伪共享","slug":"_8-7-4-伪共享","link":"#_8-7-4-伪共享","children":[]},{"level":3,"title":"8.7.5 解决伪共享","slug":"_8-7-5-解决伪共享","link":"#_8-7-5-解决伪共享","children":[]}]}],"git":{"updatedTime":1677563292000,"contributors":[{"name":"yangyunhuang","email":"yangyunhuang@zhugeio.com","commits":1}]},"filePathRelative":"language/java/JVM.md"}');export{l as data};
